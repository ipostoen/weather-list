{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guards.ts","webpack:///./src/app/_guards/index.ts","webpack:///./src/app/_helpers/error.inspector.ts","webpack:///./src/app/_helpers/index.ts","webpack:///./src/app/_helpers/jwt.inspector.ts","webpack:///./src/app/_helpers/password.validation.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.scss","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.scss","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}","export * from './auth.guards';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            if (err.status === 400) {\n                if (err.error && err.error.code === 11000) {\n                    if(err.error.index === 'email') {\n                        err.statusText = 'Duplicate email'; \n                    } else if(err.error.index === 'username') {\n                        err.statusText = 'Duplicate username'; \n                    }\n                             \n                }\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './error.inspector';\nexport * from './jwt.inspector';\nexport * from './password.validation';","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    'x-auth': `${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import {AbstractControl} from '@angular/forms';\n\nexport class PasswordValidation {\n\n    static MatchPassword(AC: AbstractControl) {\n       let password = AC.get('password').value; // to get value in input tag\n       let confirmPassword = AC.get('confirmPassword').value; // to get value in input tag\n        if(password != confirmPassword) {\n            // console.log('false');\n            AC.get('confirmPassword').setErrors( {matchPassword: true} )\n        } else {\n            // console.log('true');\n            return null\n        }\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User } from '../_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    googleAuth(user: Object) {\n        return this.http.post<any>(`http://localhost:3000/api/user/googleAuth`, user, { observe: 'response'})\n        .pipe(map((res) => {\n            let user = res.body;\n            user.token = res.headers.get('x-auth');\n            if (user && user.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n            }\n            return user;\n        }));\n    }\n\n    register(username:string, lastname: string, firstname: string, email: string, password: string) {\n        return this.http.post<any>(`http://localhost:3000/api/user`, { username, lastname, firstname, email, password }, { observe: 'response' })\n            .pipe(map((res) => {\n                \n            }));\n\n    }\n\n    intraAuth(code: string) {\n        return this.http.post<any>('/api/user/intraAuth', { code })\n        .pipe(map((res) => {\n            console.log(res);\n        }));\n    }\n\n    login(username: string, password: string) {\n        return this.http.post<any>(`http://localhost:3000/api/user/login`, { username, password }, { observe: 'response' })\n            .pipe(map((res) => {\n                let user = res.body;\n                user.token = res.headers.get('x-auth');\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    logout() {\n        return this.http.delete<any>(`http://localhost:3000/api/user/logout`, { observe: 'response' })\n            .pipe(map((res) => {\n                if (res.status === 200) {\n                    localStorage.removeItem('currentUser');\n                    this.currentUserSubject.next(null);\n                }\n            }));\n    }\n}","export * from './authentication.service';","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { AuthGuard } from './_guards';\nimport { LoginComponent, OauthComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '' , component: MainComponent, canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'intra', component: OauthComponent },\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-header></app-header>\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ht';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport {\n  MatToolbarModule,\n  MatButtonModule,\n  MatSidenavModule,\n  MatIconModule,\n  MatListModule,\n  MatInputModule\n} from '@angular/material';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent, OauthComponent } from './login/login.component';\nimport { HeaderComponent } from './header/header.component';\nimport { MainComponent } from './main/main.component';\nimport { RegisterComponent } from './register/register.component';\n\n\n\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HeaderComponent,\n    MainComponent,\n    RegisterComponent,\n    OauthComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n      <a mat-list-item href=\\\"#\\\">Link 1</a>\\n      <a mat-list-item href=\\\"#\\\">Link 2</a>\\n      <button mat-button (click)=\\\"logout()\\\">asd</button>\\n      <a mat-list-item (click)=\\\"logout()\\\">logout</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    \\n    <!-- <mat-toolbar color=\\\"primary\\\"> -->\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <!-- <span>ht</span>\\n    </mat-toolbar> -->\\n\\n    <!-- <app-login></app-login> -->\\n    \\n    <router-outlet></router-outlet>\\n    \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n.mat-sidenav-container {\\n  height: 100vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbGEvRGVza3RvcC9odC9zcmMvYXBwL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxtQkFBbUIsRUFBQTs7QUFHckI7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVLEVBQUE7O0FBR1o7RUFDRSxhQUFhLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNpZGVuYXYge1xuICB3aWR0aDogMjAwcHg7XG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cblxuLm1hdC1zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwdmg7XG59XG4iXX0= */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport { map, first } from 'rxjs/operators';\nimport { AuthenticationService } from '../_services';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent {\n  canActive: boolean;\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private authService: AuthenticationService,\n    private router: Router) {\n      if (this.authService.currentUserValue) {\n        this.canActive = true;\n      } else {\n        this.canActive = false;\n      }\n    }\n\n  logout() {\n    this.authService.logout().pipe(first())\n    .subscribe(\n      data => {\n        this.router.navigate(['/login']);\n      },\n      error => {\n        // console.log(error);\n    });;\n  }\n\n}\n","module.exports = \"<div class=\\\"container myh-100\\\">\\n  <div class=\\\"row h-100 align-items-center justify-content-center\\\">\\n    <div class=\\\"box-wrap col-12 col=sm-8 col-md-7 shadow-wrap text-center\\\">\\n\\n      <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h4>Sing In</h4>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Username</mat-label>\\n          <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n          <mat-error *ngIf=\\\"f.username.errors && f.username.errors.required\\\">Email is required.</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Password</mat-label>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n          <mat-error *ngIf=\\\"f.password.errors && f.password.errors.required\\\">Password is required.</mat-error>\\n          <mat-error *ngIf=\\\"f.password.errors && f.password.errors.minlength\\\">Password must have 6 chars.</mat-error>\\n        </mat-form-field>\\n\\n        <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n      </form>\\n\\n      <div class=\\\"or-line\\\">\\n        <p>or</p>\\n      </div>\\n\\n      <div class=\\\"social-auth\\\">\\n        <div class=\\\"item\\\">\\n          <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/register']\\\" >Sing UP</button>\\n        </div>\\n        <div class=\\\"item\\\">\\n          <button mat-raised-button id=\\\"googleBtn\\\" color=\\\"google\\\"><i class=\\\"fab fa-google-plus-g\\\"></i> Google account</button>\\n        </div>\\n        <div class=\\\"item\\\">\\n          <button mat-raised-button color=\\\"facebook\\\" (click)=\\\"loginIntra()\\\"><i class=\\\"fab fa-facebook-f\\\"></i>\\n            Facebook</button>\\n        </div>\\n<!-- <google-signin></google-signin> -->\\n\\n        <!-- <div class=\\\"item\\\">\\n          <button mat-raised-button color=\\\"google\\\"><i class=\\\"fab fa-google-plus-g\\\"></i> Google account</button>\\n        </div> -->\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".mat-form-field {\\n  width: 100%; }\\n\\n.or-line {\\n  display: flex;\\n  justify-content: center;\\n  margin-top: 30px;\\n  margin-left: 25%;\\n  border-top: 1px solid #000;\\n  width: 50%;\\n  opacity: 0.2; }\\n\\n.or-line p {\\n    margin-top: -16px;\\n    background: #fff;\\n    padding: 2px 8px; }\\n\\n.social-auth {\\n  display: flex;\\n  justify-content: center;\\n  flex-direction: column; }\\n\\n.social-auth .item {\\n    margin-bottom: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbGEvRGVza3RvcC9odC9zcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBOztBQUdmO0VBQ0ksYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQixVQUFVO0VBQ1YsWUFBWSxFQUFBOztBQVBoQjtJQVNRLGlCQUFpQjtJQUNqQixnQkFBZ0I7SUFDaEIsZ0JBQWdCLEVBQUE7O0FBSXhCO0VBQ0ksYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixzQkFBc0IsRUFBQTs7QUFIMUI7SUFLUSxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLm9yLWxpbmUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgICBtYXJnaW4tbGVmdDogMjUlO1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjMDAwO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgb3BhY2l0eTogMC4yO1xuICAgIHAge1xuICAgICAgICBtYXJnaW4tdG9wOiAtMTZweDtcbiAgICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICAgICAgcGFkZGluZzogMnB4IDhweDtcbiAgICB9XG59XG5cbi5zb2NpYWwtYXV0aCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIC5pdGVtIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgICB9XG59Il19 */\"","import { Component, OnInit, NgZone, AfterViewInit } from '@angular/core';\nimport { AuthenticationService } from '../_services';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\ndeclare const gapi: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n  public auth2: any;\n\n  constructor(\n    private auth: AuthenticationService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private ngZone: NgZone) { }\n\n  public googleInit() {\n    gapi.load('auth2', () => {\n      this.auth2 = gapi.auth2.init({\n        client_id: '692909780045-iufoaoag1n50vn4hg8154tr4gdskuebi.apps.googleusercontent.com',\n        cookiepolicy: 'single_host_origin',\n        scope: 'profile email'\n      });\n      this.attachSignin(document.getElementById('googleBtn'));\n    });\n  }\n  public attachSignin(element) {\n    this.auth2.attachClickHandler(element, {},\n      (googleUser) => {\n\n        let profile = googleUser.getBasicProfile();\n        let user = {\n          token: googleUser.getAuthResponse().id_token,\n          name: profile.getName(),\n          email: profile.getEmail(),\n        }\n        this.auth.googleAuth(user)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.navigate();\n            },\n            error => {\n              // console.log(error);\n            });\n\n      }, (error) => {\n        alert(JSON.stringify(error, undefined, 2));\n      });\n  }\n\n  ngAfterViewInit() {\n    this.googleInit();\n  }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      username: ['', [\n        Validators.required\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]]\n    });\n\n    this.auth.logout();\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  navigate() {\n    this.ngZone.run(() => this.router.navigate([this.returnUrl])).then();\n  }\n  \n  loginIntra() {\n    window.location.href = \"https://api.intra.42.fr/oauth/authorize?client_id=792b479c6c3a8b2aa6bd91ffbdef3389771b05a64c1d62b380ede7f7667f7320&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fintra&response_type=code\";\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.auth.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.navigate();\n        },\n        error => {\n          // console.log(error);\n        });\n  }\n\n}\n\n@Component({\n  selector: 'app-oauth',\n  template: \"\"\n})\nexport class OauthComponent implements AfterViewInit {\n  error: string;\n  code: string;\n\n  constructor(\n    private auth: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private ngZone: NgZone) {\n    \n  }\n\n\n\n  ngAfterViewInit() {\n    this.code = this.route.snapshot.queryParamMap.get('code') || null;\n    this.error = this.route.snapshot.queryParamMap.get('error') || null;\n    console.log('Intra: ', this.code);\n    console.log('Error: ', this.error);\n    if (this.error !== null) {\n      this.ngZone.run(() => this.router.navigate(['/login'])).then();\n    } else if (this.code !== null) {\n      this.auth.intraAuth(this.code)\n      .pipe(first())\n      .subscribe(\n        data => {\n          // console.log(this.route.snapshot.queryParamMap);\n          // this.ngZone.run(() => this.router.navigate(['/login'])).then();\n        },\n        err => {\n          console.log(err);\n          // this.ngZone.run(() => this.router.navigate(['/login'])).then();\n        }\n      )\n    } else if (this.code === null && this.error === null) {\n      this.ngZone.run(() => this.router.navigate(['/login'])).then();\n    }\n\n  }\n}\n","module.exports = \"<p>\\n  main works!\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container myh-100\\\">\\n  <div class=\\\"row h-100 align-items-center justify-content-center\\\">\\n    <div class=\\\"box-wrap col-12 col=sm-8 col-md-7 shadow-wrap text-center\\\">\\n\\n      <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <h4>Sing Up</h4>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label>Username</mat-label>\\n            <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\">\\n            <mat-error *ngIf=\\\"f.username.errors && f.username.errors.required\\\">Username is required.</mat-error>\\n            <mat-error *ngIf=\\\"f.username.errors && f.username.errors.minlength\\\">Username must have 6 chars.</mat-error>\\n            <mat-error *ngIf=\\\"f.username.errors && f.username.errors.Duplicate\\\">Username is duplicate.</mat-error>\\n          </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>First name</mat-label>\\n          <input matInput placeholder=\\\"First name\\\" formControlName=\\\"firstname\\\">\\n          <mat-error *ngIf=\\\"f.firstname.errors && f.firstname.errors.required\\\">First name is required.</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Last name</mat-label>\\n          <input matInput placeholder=\\\"Last name\\\" formControlName=\\\"lastname\\\">\\n          <mat-error *ngIf=\\\"f.lastname.errors && f.lastname.errors.required\\\">Last name is required.</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Email</mat-label>\\n          <input matInput placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n          <mat-error *ngIf=\\\"f.email.errors && f.email.errors.required\\\">Email is required.</mat-error>\\n          <mat-error *ngIf=\\\"f.email.errors && f.email.errors.email\\\">Email is not valid.</mat-error>\\n          <mat-error *ngIf=\\\"f.email.errors && f.email.errors.Duplicate\\\">Email is duplicate.</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Password</mat-label>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n          <mat-error *ngIf=\\\"f.password.errors && f.password.errors.required\\\">Password is required.</mat-error>\\n          <mat-error *ngIf=\\\"f.password.errors && f.password.errors.minlength\\\">Password must have 6 chars.</mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Confirm password</mat-label>\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Confirm password\\\" formControlName=\\\"confirmPassword\\\">\\n          <mat-error *ngIf=\\\"f.confirmPassword.errors && f.confirmPassword.errors.required\\\">Confirm password is required.\\n          </mat-error>\\n          <mat-error *ngIf=\\\"f.confirmPassword.errors && f.confirmPassword.errors?.matchPassword\\\">Password dont match.</mat-error>\\n        </mat-form-field>\\n\\n        <button mat-raised-button color=\\\"accent\\\">Accent</button>\\n      </form>\\n\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".mat-form-field {\\n  width: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbGEvRGVza3RvcC9odC9zcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../_services';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PasswordValidation } from '../_helpers';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  returnUrl: string;\n\n  constructor(\n    private auth: AuthenticationService,\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      username: ['', [\n        Validators.required,\n        Validators.minLength(3)\n      ]],\n      firstname: ['', [\n        Validators.required,\n        // Validators.minLength(3)\n      ]],\n      lastname: ['', [\n        Validators.required,\n        // Validators.minLength(3)\n      ]],\n      email: ['', [\n        Validators.required,\n        Validators.email\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6)\n      ]],\n      confirmPassword: ['', [\n        Validators.required,\n      ]]\n    }, {validator: PasswordValidation.MatchPassword});\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.auth.register(this.f.username.value, this.f.lastname.value, this.f.firstname.value, this.f.email.value, this.f.password.value)\n    .pipe(first())\n    .subscribe(\n      data => {\n        this.router.navigate(['/login']);\n      },\n      error => {\n        if (error === 'Duplicate email') {\n          this.f.email.setErrors({Duplicate: true});\n        } else if (error === 'Duplicate username') {\n          this.f.username.setErrors({Duplicate: true});          \n        }\n      });\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}